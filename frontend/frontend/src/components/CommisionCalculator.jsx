import React, { useState } from 'react';

const CommissionCalculator = () => {
  // State for input values
  const [referralLosses, setReferralLosses] = useState(75000);
  const [referralWins, setReferralWins] = useState(15000);
  const [commissionRate, setCommissionRate] = useState(12);
  
  // Currency formatting function
  const formatCurrency = (amount) => {
    return amount < 0 
      ? `-$${Math.abs(amount).toLocaleString()}` 
      : `$${amount.toLocaleString()}`;
  };
  
  // Calculate derived values
  const netLosses = referralLosses - referralWins;
  const commission = netLosses * (commissionRate / 100);
  const reduction = referralWins * (commissionRate / 100);
  
  return (
    <div style={styles.container}>
      <header style={styles.header}>
        <h1 style={styles.title}>Affiliate Commission Calculator</h1>
        <p style={styles.subtitle}>
          Calculate your referral commissions based on your affiliates' wins and losses with our interactive tool
        </p>
      </header>
      
      <div style={styles.calculator}>
        {/* Inputs Panel */}
        <div style={styles.inputPanel}>
          <h3 style={styles.panelTitle}>
            <span style={styles.icon}>ðŸ“Š</span> Input Parameters
          </h3>
          
          <div style={styles.inputGroup}>
            <label style={styles.label}>
              Referral Losses
              <span style={styles.inputValue}>{formatCurrency(referralLosses)}</span>
            </label>
            <input
              type="range"
              min="0"
              max="100000"
              value={referralLosses}
              onChange={(e) => setReferralLosses(Number(e.target.value))}
              style={styles.slider}
            />
            <div style={styles.valueDisplay}>
              {formatCurrency(referralLosses)}
            </div>
          </div>
          
          <div style={styles.inputGroup}>
            <label style={styles.label}>
              Referral Wins
              <span style={styles.inputValue}>{formatCurrency(referralWins)}</span>
            </label>
            <input
              type="range"
              min="0"
              max="50000"
              value={referralWins}
              onChange={(e) => setReferralWins(Number(e.target.value))}
              style={styles.slider}
            />
            <div style={{ ...styles.valueDisplay, color: '#10b981' }}>
              {formatCurrency(referralWins)}
            </div>
          </div>
          
          <div style={styles.inputGroup}>
            <label style={styles.label}>
              Commission Rate
              <span style={styles.inputValue}>{commissionRate}%</span>
            </label>
            <input
              type="range"
              min="5"
              max="20"
              value={commissionRate}
              onChange={(e) => setCommissionRate(Number(e.target.value))}
              style={styles.slider}
            />
            <div style={{ ...styles.valueDisplay, color: '#d8b4fe' }}>
              {/* {commissionRate}% */}
            </div>
          </div>
        </div>
        
        {/* Results Panel */}
        <div style={styles.resultsPanel}>
          <div style={styles.resultGroup}>
            <div style={styles.resultLabel}>Net Losses</div>
            <div style={styles.netLoss}>{formatCurrency(netLosses)}</div>
            <div style={styles.calculationNote}>
              (Losses {formatCurrency(referralLosses)} - Wins {formatCurrency(referralWins)})
            </div>
          </div>
          
          <div style={styles.resultGroup}>
            <div style={styles.resultLabel}>Your Commission</div>
            <div style={styles.commissionAmount}>{formatCurrency(commission)}</div>
            <div style={styles.calculationNote}>
              Wins reduced commission by {formatCurrency(reduction)}
            </div>
          </div>
        </div>
      </div>
      
      <div style={styles.explanation}>
        <h3 style={styles.explanationTitle}>How Commission is Calculated</h3>
        <p style={styles.explanationText}>
          This calculator determines your commission based on your affiliates' net losses. The formula is:
        </p>
        
        <div style={styles.formula}>
          Commission = (Referral Losses - Referral Wins) Ã— (Commission Rate / 100)
        </div>
        
        <p style={styles.explanationText}>
          Your commission is calculated on the <span style={styles.highlight}>net losses</span> generated by your referrals. This means:
        </p>
        <ul style={styles.list}>
          <li>Affiliate losses increase your commission</li>
          <li>Affiliate wins decrease your commission</li>
          <li>The commission rate determines what percentage of net losses you earn</li>
        </ul>
      </div>
    </div>
  );
};

// Styles
const styles = {
  container: {
    background: 'linear-gradient(135deg, #1a0b2e, #0d061b)',
    color: 'white',
    minHeight: '100vh',
    padding: '2rem',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif"
  },
  header: {
    textAlign: 'center',
    marginBottom: '2.5rem',
    maxWidth: '800px'
  },
  title: {
    fontSize: '2.5rem',
    background: 'linear-gradient(90deg, #a855f7, #ec4899)',
    WebkitBackgroundClip: 'text',
    WebkitTextFillColor: 'transparent',
    marginBottom: '0.5rem'
  },
  subtitle: {
    color: '#c4b5fd',
    fontSize: '1.1rem',
    lineHeight: '1.6'
  },
  calculator: {
    display: 'grid',
    gridTemplateColumns: '1fr 1fr',
    gap: '1.5rem',
    marginBottom: '2rem',
    width: '100%',
    maxWidth: '1200px'
  },
  panel: {
    background: 'rgba(39, 23, 65, 0.4)',
    borderRadius: '16px',
    padding: '1.5rem',
    border: '1px solid rgba(168, 85, 247, 0.3)',
    backdropFilter: 'blur(10px)',
    transition: 'transform 0.3s ease, box-shadow 0.3s ease',
    ':hover': {
      transform: 'translateY(-5px)',
      boxShadow: '0 10px 25px rgba(168, 85, 247, 0.2)'
    }
  },
  inputPanel: {
    background: 'rgba(39, 23, 65, 0.4)',
    borderRadius: '16px',
    padding: '1.5rem',
    border: '1px solid rgba(168, 85, 247, 0.3)',
    backdropFilter: 'blur(10px)',
    transition: 'transform 0.3s ease, box-shadow 0.3s ease'
  },
  resultsPanel: {
    background: 'rgba(39, 23, 65, 0.4)',
    borderRadius: '16px',
    padding: '1.5rem',
    border: '1px solid rgba(168, 85, 247, 0.3)',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    textAlign: 'center',
    backdropFilter: 'blur(10px)',
    transition: 'transform 0.3s ease, box-shadow 0.3s ease'
  },
  panelTitle: {
    color: '#d8b4fe',
    marginBottom: '1.5rem',
    fontSize: '1.3rem',
    display: 'flex',
    alignItems: 'center',
    gap: '0.8rem'
  },
  icon: {
    fontSize: '1.5rem'
  },
  inputGroup: {
    marginBottom: '1.5rem'
  },
  label: {
    display: 'block',
    marginBottom: '0.8rem',
    color: '#e9d5ff',
    fontWeight: '500',
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center'
  },
  inputValue: {
    background: 'rgba(124, 58, 237, 0.2)',
    padding: '0.3rem 0.8rem',
    borderRadius: '20px',
    fontSize: '0.9rem'
  },
  slider: {
    width: '100%',
    height: '8px',
    background: 'linear-gradient(90deg, #7e22ce, #c084fc)',
    borderRadius: '4px',
    outline: 'none',
    WebkitAppearance: 'none',
    '::-webkit-slider-thumb': {
      WebkitAppearance: 'none',
      width: '22px',
      height: '22px',
      borderRadius: '50%',
      background: '#d8b4fe',
      border: '2px solid #a855f7',
      cursor: 'pointer',
      boxShadow: '0 0 10px rgba(168, 85, 247, 0.7)'
    }
  },
  valueDisplay: {
    textAlign: 'center',
    fontSize: '1.5rem',
    fontWeight: '700',
    padding: '0.8rem 0'
  },
  resultGroup: {
    marginBottom: '2rem',
    width: '100%'
  },
  resultLabel: {
    fontSize: '1rem',
    color: 'rgba(255, 255, 255, 0.7)',
    marginBottom: '0.5rem'
  },
  netLoss: {
    fontSize: '2rem',
    fontWeight: '700',
    marginBottom: '0.5rem'
  },
  commissionAmount: {
    fontSize: '3rem',
    fontWeight: '800',
    background: 'linear-gradient(135deg, #a855f7, #ec4899)',
    WebkitBackgroundClip: 'text',
    WebkitTextFillColor: 'transparent',
    margin: '1rem 0'
  },
  calculationNote: {
    fontSize: '0.9rem',
    color: 'rgba(255, 255, 255, 0.7)'
  },
  explanation: {
    background: 'rgba(39, 23, 65, 0.4)',
    borderRadius: '16px',
    padding: '2rem',
    border: '1px solid rgba(168, 85, 247, 0.3)',
    marginTop: '2rem',
    width: '100%',
    maxWidth: '1200px'
  },
  explanationTitle: {
    color: '#d8b4fe',
    marginBottom: '1rem',
    fontSize: '1.4rem'
  },
  explanationText: {
    color: '#e9d5ff',
    lineHeight: '1.8',
    marginBottom: '1rem'
  },
  formula: {
    background: 'rgba(56, 31, 91, 0.5)',
    padding: '1.2rem',
    borderRadius: '12px',
    fontFamily: 'monospace',
    fontSize: '1.1rem',
    margin: '1.5rem 0',
    borderLeft: '4px solid #a855f7'
  },
  highlight: {
    color: '#f0abfc',
    fontWeight: '600'
  },
  list: {
    color: '#e9d5ff',
    lineHeight: '1.8',
    paddingLeft: '1.5rem',
    marginBottom: '1rem'
  },
  footer: {
    textAlign: 'center',
    marginTop: '3rem',
    color: 'rgba(255, 255, 255, 0.6)',
    fontSize: '0.9rem',
    width: '100%'
  }
};

export default CommissionCalculator;